// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@alot/transformer transpiles es5/leftPad.ts 1`] = `
"Object.defineProperty(exports, \\"__esModule\\", {
    value: true
});
exports.leftPad = leftPad;
var cache = ['', ' ', '  ', '   ', '    ', '     ', '      ', '       ', '        ', '         '];
function leftPad(str, len) {
    var ch = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ' ';

    str = str + '';

    len = len - str.length;

    if (len <= 0) return str;

    if (!ch && ch !== 0) ch = ' ';

    ch = ch + '';

    if (ch === ' ' && len < 10) return cache[len] + str;

    var pad = '';

    while (true) {
        if (len & 1) pad += ch;

        len >>= 1;

        if (len) ch += ch;else break;
    }

    return pad + str;
}"
`;

exports[`@alot/transformer transpiles es2015/leftPad.ts 1`] = `
"Object.defineProperty(exports, \\"__esModule\\", {
    value: true
});
exports.leftPad = leftPad;
var cache = ['', ' ', '  ', '   ', '    ', '     ', '      ', '       ', '        ', '         '];
function leftPad(str, len) {
    var ch = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ' ';

    str = str + '';

    len = len - str.length;

    if (len <= 0) return str;

    if (!ch && ch !== 0) ch = ' ';

    ch = ch + '';

    if (ch === ' ' && len < 10) return cache[len] + str;

    var pad = '';

    while (true) {
        if (len & 1) pad += ch;

        len >>= 1;

        if (len) ch += ch;else break;
    }

    return pad + str;
}"
`;

exports[`@alot/transformer transpiles es2016/leftPad.ts 1`] = `
"Object.defineProperty(exports, \\"__esModule\\", {
    value: true
});
exports.leftPad = leftPad;
var cache = ['', ' ', '  ', '   ', '    ', '     ', '      ', '       ', '        ', '         '];
function leftPad(str, len) {
    var ch = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ' ';

    str = str + '';

    len = len - str.length;

    if (len <= 0) return str;

    if (!ch && ch !== 0) ch = ' ';

    ch = ch + '';

    if (ch === ' ' && len < 10) return cache[len] + str;

    var pad = '';

    while (true) {
        if (len & 1) pad += ch;

        len >>= 1;

        if (len) ch += ch;else break;
    }

    return pad + str;
}"
`;
